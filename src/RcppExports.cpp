// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// TestUpdateZ
Rcpp::List TestUpdateZ();
RcppExport SEXP _BayesFOC_TestUpdateZ() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateZ());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdatePi
Rcpp::List TestUpdatePi();
RcppExport SEXP _BayesFOC_TestUpdatePi() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdatePi());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdatePhi
Rcpp::List TestUpdatePhi();
RcppExport SEXP _BayesFOC_TestUpdatePhi() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdatePhi());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateDelta
Rcpp::List TestUpdateDelta();
RcppExport SEXP _BayesFOC_TestUpdateDelta() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateDelta());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateA
Rcpp::List TestUpdateA();
RcppExport SEXP _BayesFOC_TestUpdateA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateA());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateGamma
Rcpp::List TestUpdateGamma();
RcppExport SEXP _BayesFOC_TestUpdateGamma() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateGamma());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateNu
Rcpp::List TestUpdateNu();
RcppExport SEXP _BayesFOC_TestUpdateNu() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateNu());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateTau
Rcpp::List TestUpdateTau();
RcppExport SEXP _BayesFOC_TestUpdateTau() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateTau());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateSigma
Rcpp::List TestUpdateSigma();
RcppExport SEXP _BayesFOC_TestUpdateSigma() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateSigma());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayesFOC_TestUpdateZ", (DL_FUNC) &_BayesFOC_TestUpdateZ, 0},
    {"_BayesFOC_TestUpdatePi", (DL_FUNC) &_BayesFOC_TestUpdatePi, 0},
    {"_BayesFOC_TestUpdatePhi", (DL_FUNC) &_BayesFOC_TestUpdatePhi, 0},
    {"_BayesFOC_TestUpdateDelta", (DL_FUNC) &_BayesFOC_TestUpdateDelta, 0},
    {"_BayesFOC_TestUpdateA", (DL_FUNC) &_BayesFOC_TestUpdateA, 0},
    {"_BayesFOC_TestUpdateGamma", (DL_FUNC) &_BayesFOC_TestUpdateGamma, 0},
    {"_BayesFOC_TestUpdateNu", (DL_FUNC) &_BayesFOC_TestUpdateNu, 0},
    {"_BayesFOC_TestUpdateTau", (DL_FUNC) &_BayesFOC_TestUpdateTau, 0},
    {"_BayesFOC_TestUpdateSigma", (DL_FUNC) &_BayesFOC_TestUpdateSigma, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayesFOC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
