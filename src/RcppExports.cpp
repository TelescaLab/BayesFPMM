// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// BFOC
Rcpp::List BFOC(const arma::field<arma::vec> y_obs, const arma::field<arma::vec> t_obs, const double n_funct, const int K, const int P, const int M, const int tot_mcmc_iters, const arma::field<arma::vec> t_star, const double nu_1, const double rho, const double alpha_3, const double alpha1l, const double alpha2l, const double beta1l, const double beta2l, const double var_epsilon1, const double var_epsilon2, const double alpha, const double beta, const double alpha_0, const double beta_0);
RcppExport SEXP _BayesFOC_BFOC(SEXP y_obsSEXP, SEXP t_obsSEXP, SEXP n_functSEXP, SEXP KSEXP, SEXP PSEXP, SEXP MSEXP, SEXP tot_mcmc_itersSEXP, SEXP t_starSEXP, SEXP nu_1SEXP, SEXP rhoSEXP, SEXP alpha_3SEXP, SEXP alpha1lSEXP, SEXP alpha2lSEXP, SEXP beta1lSEXP, SEXP beta2lSEXP, SEXP var_epsilon1SEXP, SEXP var_epsilon2SEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::field<arma::vec> >::type y_obs(y_obsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec> >::type t_obs(t_obsSEXP);
    Rcpp::traits::input_parameter< const double >::type n_funct(n_functSEXP);
    Rcpp::traits::input_parameter< const int >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int >::type P(PSEXP);
    Rcpp::traits::input_parameter< const int >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec> >::type t_star(t_starSEXP);
    Rcpp::traits::input_parameter< const double >::type nu_1(nu_1SEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_3(alpha_3SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha1l(alpha1lSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha2l(alpha2lSEXP);
    Rcpp::traits::input_parameter< const double >::type beta1l(beta1lSEXP);
    Rcpp::traits::input_parameter< const double >::type beta2l(beta2lSEXP);
    Rcpp::traits::input_parameter< const double >::type var_epsilon1(var_epsilon1SEXP);
    Rcpp::traits::input_parameter< const double >::type var_epsilon2(var_epsilon2SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    rcpp_result_gen = Rcpp::wrap(BFOC(y_obs, t_obs, n_funct, K, P, M, tot_mcmc_iters, t_star, nu_1, rho, alpha_3, alpha1l, alpha2l, beta1l, beta2l, var_epsilon1, var_epsilon2, alpha, beta, alpha_0, beta_0));
    return rcpp_result_gen;
END_RCPP
}
// BFOC_SS
Rcpp::List BFOC_SS(const arma::mat known_Z, const arma::field<arma::vec> y_obs, const arma::field<arma::vec> t_obs, const double n_funct, const int K, const int P, const int M, const int tot_mcmc_iters, const int r_stored_iters, const arma::field<arma::vec> t_star, const double nu_1, const double rho, const double alpha_3, const double alpha1l, const double alpha2l, const double beta1l, const double beta2l, const double var_epsilon1, const double var_epsilon2, const double alpha, const double beta, const double alpha_0, const double beta_0, const std::string directory);
RcppExport SEXP _BayesFOC_BFOC_SS(SEXP known_ZSEXP, SEXP y_obsSEXP, SEXP t_obsSEXP, SEXP n_functSEXP, SEXP KSEXP, SEXP PSEXP, SEXP MSEXP, SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP t_starSEXP, SEXP nu_1SEXP, SEXP rhoSEXP, SEXP alpha_3SEXP, SEXP alpha1lSEXP, SEXP alpha2lSEXP, SEXP beta1lSEXP, SEXP beta2lSEXP, SEXP var_epsilon1SEXP, SEXP var_epsilon2SEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP directorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type known_Z(known_ZSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec> >::type y_obs(y_obsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec> >::type t_obs(t_obsSEXP);
    Rcpp::traits::input_parameter< const double >::type n_funct(n_functSEXP);
    Rcpp::traits::input_parameter< const int >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int >::type P(PSEXP);
    Rcpp::traits::input_parameter< const int >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec> >::type t_star(t_starSEXP);
    Rcpp::traits::input_parameter< const double >::type nu_1(nu_1SEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_3(alpha_3SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha1l(alpha1lSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha2l(alpha2lSEXP);
    Rcpp::traits::input_parameter< const double >::type beta1l(beta1lSEXP);
    Rcpp::traits::input_parameter< const double >::type beta2l(beta2lSEXP);
    Rcpp::traits::input_parameter< const double >::type var_epsilon1(var_epsilon1SEXP);
    Rcpp::traits::input_parameter< const double >::type var_epsilon2(var_epsilon2SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    rcpp_result_gen = Rcpp::wrap(BFOC_SS(known_Z, y_obs, t_obs, n_funct, K, P, M, tot_mcmc_iters, r_stored_iters, t_star, nu_1, rho, alpha_3, alpha1l, alpha2l, beta1l, beta2l, var_epsilon1, var_epsilon2, alpha, beta, alpha_0, beta_0, directory));
    return rcpp_result_gen;
END_RCPP
}
// BFOC_U
Rcpp::List BFOC_U(const arma::field<arma::vec>& y_obs, const arma::field<arma::vec>& t_obs, const double& n_funct, const int& K, const int& P, const int& M, const int& tot_mcmc_iters, const int& r_stored_iters, const arma::field<arma::vec>& t_star, const double& nu_1, const double& rho, const double& alpha_3, const double& alpha1l, const double& alpha2l, const double& beta1l, const double& beta2l, const double& var_epsilon1, const double& var_epsilon2, const double& alpha, const double& beta, const double& alpha_0, const double& beta_0, const std::string directory, const arma::mat& Z_est, const arma::vec& A_est, const arma::vec& pi_est, const arma::vec& tau_est, const arma::vec& delta_est, const arma::mat& nu_est, const arma::cube& Phi_est, const arma::cube& gamma_est, const arma::mat& chi_est, const arma::field<arma::vec>& y_star_est, const double& sigma_est);
RcppExport SEXP _BayesFOC_BFOC_U(SEXP y_obsSEXP, SEXP t_obsSEXP, SEXP n_functSEXP, SEXP KSEXP, SEXP PSEXP, SEXP MSEXP, SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP t_starSEXP, SEXP nu_1SEXP, SEXP rhoSEXP, SEXP alpha_3SEXP, SEXP alpha1lSEXP, SEXP alpha2lSEXP, SEXP beta1lSEXP, SEXP beta2lSEXP, SEXP var_epsilon1SEXP, SEXP var_epsilon2SEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP directorySEXP, SEXP Z_estSEXP, SEXP A_estSEXP, SEXP pi_estSEXP, SEXP tau_estSEXP, SEXP delta_estSEXP, SEXP nu_estSEXP, SEXP Phi_estSEXP, SEXP gamma_estSEXP, SEXP chi_estSEXP, SEXP y_star_estSEXP, SEXP sigma_estSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_obs(y_obsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_obs(t_obsSEXP);
    Rcpp::traits::input_parameter< const double& >::type n_funct(n_functSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int& >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int& >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_star(t_starSEXP);
    Rcpp::traits::input_parameter< const double& >::type nu_1(nu_1SEXP);
    Rcpp::traits::input_parameter< const double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_3(alpha_3SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha1l(alpha1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha2l(alpha2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta1l(beta1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta2l(beta2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon1(var_epsilon1SEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon2(var_epsilon2SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z_est(Z_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type A_est(A_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type pi_est(pi_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type tau_est(tau_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type delta_est(delta_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type nu_est(nu_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Phi_est(Phi_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type gamma_est(gamma_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type chi_est(chi_estSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_star_est(y_star_estSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma_est(sigma_estSEXP);
    rcpp_result_gen = Rcpp::wrap(BFOC_U(y_obs, t_obs, n_funct, K, P, M, tot_mcmc_iters, r_stored_iters, t_star, nu_1, rho, alpha_3, alpha1l, alpha2l, beta1l, beta2l, var_epsilon1, var_epsilon2, alpha, beta, alpha_0, beta_0, directory, Z_est, A_est, pi_est, tau_est, delta_est, nu_est, Phi_est, gamma_est, chi_est, y_star_est, sigma_est));
    return rcpp_result_gen;
END_RCPP
}
// BFOC_U_TT
Rcpp::List BFOC_U_TT(const arma::field<arma::vec>& y_obs, const arma::field<arma::vec>& t_obs, const double& n_funct, const int& K, const int& P, const int& M, const int& tot_mcmc_iters, const int& r_stored_iters, const arma::field<arma::vec>& t_star, const double& nu_1, const double& rho, const double& alpha_3, const double& alpha1l, const double& alpha2l, const double& beta1l, const double& beta2l, const double& var_epsilon1, const double& var_epsilon2, const double& alpha, const double& beta, const double& alpha_0, const double& beta_0, const std::string directory, const arma::mat& Z_est, const arma::vec& A_est, const arma::vec& pi_est, const arma::vec& tau_est, const arma::vec& delta_est, const arma::mat& nu_est, const arma::cube& Phi_est, const arma::cube& gamma_est, const arma::mat& chi_est, const arma::field<arma::vec>& y_star_est, const double& beta_N_t, const int& N_t, const double& sigma_est);
RcppExport SEXP _BayesFOC_BFOC_U_TT(SEXP y_obsSEXP, SEXP t_obsSEXP, SEXP n_functSEXP, SEXP KSEXP, SEXP PSEXP, SEXP MSEXP, SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP t_starSEXP, SEXP nu_1SEXP, SEXP rhoSEXP, SEXP alpha_3SEXP, SEXP alpha1lSEXP, SEXP alpha2lSEXP, SEXP beta1lSEXP, SEXP beta2lSEXP, SEXP var_epsilon1SEXP, SEXP var_epsilon2SEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP directorySEXP, SEXP Z_estSEXP, SEXP A_estSEXP, SEXP pi_estSEXP, SEXP tau_estSEXP, SEXP delta_estSEXP, SEXP nu_estSEXP, SEXP Phi_estSEXP, SEXP gamma_estSEXP, SEXP chi_estSEXP, SEXP y_star_estSEXP, SEXP beta_N_tSEXP, SEXP N_tSEXP, SEXP sigma_estSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_obs(y_obsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_obs(t_obsSEXP);
    Rcpp::traits::input_parameter< const double& >::type n_funct(n_functSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int& >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int& >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_star(t_starSEXP);
    Rcpp::traits::input_parameter< const double& >::type nu_1(nu_1SEXP);
    Rcpp::traits::input_parameter< const double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_3(alpha_3SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha1l(alpha1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha2l(alpha2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta1l(beta1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta2l(beta2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon1(var_epsilon1SEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon2(var_epsilon2SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z_est(Z_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type A_est(A_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type pi_est(pi_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type tau_est(tau_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type delta_est(delta_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type nu_est(nu_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Phi_est(Phi_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type gamma_est(gamma_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type chi_est(chi_estSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_star_est(y_star_estSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_N_t(beta_N_tSEXP);
    Rcpp::traits::input_parameter< const int& >::type N_t(N_tSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma_est(sigma_estSEXP);
    rcpp_result_gen = Rcpp::wrap(BFOC_U_TT(y_obs, t_obs, n_funct, K, P, M, tot_mcmc_iters, r_stored_iters, t_star, nu_1, rho, alpha_3, alpha1l, alpha2l, beta1l, beta2l, var_epsilon1, var_epsilon2, alpha, beta, alpha_0, beta_0, directory, Z_est, A_est, pi_est, tau_est, delta_est, nu_est, Phi_est, gamma_est, chi_est, y_star_est, beta_N_t, N_t, sigma_est));
    return rcpp_result_gen;
END_RCPP
}
// BFOC_U_Temp
Rcpp::List BFOC_U_Temp(const arma::field<arma::vec>& y_obs, const arma::field<arma::vec>& t_obs, const double& n_funct, const int& K, const int& P, const int& M, const int& tot_mcmc_iters, const int& r_stored_iters, const arma::field<arma::vec>& t_star, const double& nu_1, const double& rho, const double& alpha_3, const double& alpha1l, const double& alpha2l, const double& beta1l, const double& beta2l, const double& var_epsilon1, const double& var_epsilon2, const double& alpha, const double& beta, const double& alpha_0, const double& beta_0, const std::string directory, const arma::mat& Z_est, const arma::vec& A_est, const arma::vec& pi_est, const arma::vec& tau_est, const arma::vec& delta_est, const arma::mat& nu_est, const arma::cube& Phi_est, const arma::cube& gamma_est, const arma::mat& chi_est, const arma::field<arma::vec>& y_star_est, const double& temp, const double& sigma_est);
RcppExport SEXP _BayesFOC_BFOC_U_Temp(SEXP y_obsSEXP, SEXP t_obsSEXP, SEXP n_functSEXP, SEXP KSEXP, SEXP PSEXP, SEXP MSEXP, SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP t_starSEXP, SEXP nu_1SEXP, SEXP rhoSEXP, SEXP alpha_3SEXP, SEXP alpha1lSEXP, SEXP alpha2lSEXP, SEXP beta1lSEXP, SEXP beta2lSEXP, SEXP var_epsilon1SEXP, SEXP var_epsilon2SEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP directorySEXP, SEXP Z_estSEXP, SEXP A_estSEXP, SEXP pi_estSEXP, SEXP tau_estSEXP, SEXP delta_estSEXP, SEXP nu_estSEXP, SEXP Phi_estSEXP, SEXP gamma_estSEXP, SEXP chi_estSEXP, SEXP y_star_estSEXP, SEXP tempSEXP, SEXP sigma_estSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_obs(y_obsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_obs(t_obsSEXP);
    Rcpp::traits::input_parameter< const double& >::type n_funct(n_functSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int& >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int& >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_star(t_starSEXP);
    Rcpp::traits::input_parameter< const double& >::type nu_1(nu_1SEXP);
    Rcpp::traits::input_parameter< const double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_3(alpha_3SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha1l(alpha1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha2l(alpha2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta1l(beta1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta2l(beta2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon1(var_epsilon1SEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon2(var_epsilon2SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z_est(Z_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type A_est(A_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type pi_est(pi_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type tau_est(tau_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type delta_est(delta_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type nu_est(nu_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Phi_est(Phi_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type gamma_est(gamma_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type chi_est(chi_estSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_star_est(y_star_estSEXP);
    Rcpp::traits::input_parameter< const double& >::type temp(tempSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma_est(sigma_estSEXP);
    rcpp_result_gen = Rcpp::wrap(BFOC_U_Temp(y_obs, t_obs, n_funct, K, P, M, tot_mcmc_iters, r_stored_iters, t_star, nu_1, rho, alpha_3, alpha1l, alpha2l, beta1l, beta2l, var_epsilon1, var_epsilon2, alpha, beta, alpha_0, beta_0, directory, Z_est, A_est, pi_est, tau_est, delta_est, nu_est, Phi_est, gamma_est, chi_est, y_star_est, temp, sigma_est));
    return rcpp_result_gen;
END_RCPP
}
// BFOC_U_Templadder
Rcpp::List BFOC_U_Templadder(const arma::field<arma::vec>& y_obs, const arma::field<arma::vec>& t_obs, const double& n_funct, const int& K, const int& P, const int& M, const int& tot_mcmc_iters, const int& r_stored_iters, const arma::field<arma::vec>& t_star, const double& nu_1, const double& rho, const double& alpha_3, const double& alpha1l, const double& alpha2l, const double& beta1l, const double& beta2l, const double& var_epsilon1, const double& var_epsilon2, const double& alpha, const double& beta, const double& alpha_0, const double& beta_0, const arma::mat& Z_est, const arma::vec& A_est, const arma::vec& pi_est, const arma::vec& tau_est, const arma::vec& delta_est, const arma::mat& nu_est, const arma::cube& Phi_est, const arma::cube& gamma_est, const arma::mat& chi_est, const arma::field<arma::vec>& y_star_est, const double& beta_N_t, const int& N_t, const double& sigma_est);
RcppExport SEXP _BayesFOC_BFOC_U_Templadder(SEXP y_obsSEXP, SEXP t_obsSEXP, SEXP n_functSEXP, SEXP KSEXP, SEXP PSEXP, SEXP MSEXP, SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP t_starSEXP, SEXP nu_1SEXP, SEXP rhoSEXP, SEXP alpha_3SEXP, SEXP alpha1lSEXP, SEXP alpha2lSEXP, SEXP beta1lSEXP, SEXP beta2lSEXP, SEXP var_epsilon1SEXP, SEXP var_epsilon2SEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP Z_estSEXP, SEXP A_estSEXP, SEXP pi_estSEXP, SEXP tau_estSEXP, SEXP delta_estSEXP, SEXP nu_estSEXP, SEXP Phi_estSEXP, SEXP gamma_estSEXP, SEXP chi_estSEXP, SEXP y_star_estSEXP, SEXP beta_N_tSEXP, SEXP N_tSEXP, SEXP sigma_estSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_obs(y_obsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_obs(t_obsSEXP);
    Rcpp::traits::input_parameter< const double& >::type n_funct(n_functSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int& >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int& >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_star(t_starSEXP);
    Rcpp::traits::input_parameter< const double& >::type nu_1(nu_1SEXP);
    Rcpp::traits::input_parameter< const double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_3(alpha_3SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha1l(alpha1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha2l(alpha2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta1l(beta1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta2l(beta2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon1(var_epsilon1SEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon2(var_epsilon2SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z_est(Z_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type A_est(A_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type pi_est(pi_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type tau_est(tau_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type delta_est(delta_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type nu_est(nu_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Phi_est(Phi_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type gamma_est(gamma_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type chi_est(chi_estSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_star_est(y_star_estSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_N_t(beta_N_tSEXP);
    Rcpp::traits::input_parameter< const int& >::type N_t(N_tSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma_est(sigma_estSEXP);
    rcpp_result_gen = Rcpp::wrap(BFOC_U_Templadder(y_obs, t_obs, n_funct, K, P, M, tot_mcmc_iters, r_stored_iters, t_star, nu_1, rho, alpha_3, alpha1l, alpha2l, beta1l, beta2l, var_epsilon1, var_epsilon2, alpha, beta, alpha_0, beta_0, Z_est, A_est, pi_est, tau_est, delta_est, nu_est, Phi_est, gamma_est, chi_est, y_star_est, beta_N_t, N_t, sigma_est));
    return rcpp_result_gen;
END_RCPP
}
// BFOC_U_MTT
Rcpp::List BFOC_U_MTT(const arma::field<arma::vec>& y_obs, const arma::field<arma::vec>& t_obs, const double& n_funct, const int& K, const int& P, const int& M, const int& tot_mcmc_iters, const int& r_stored_iters, const int& n_temp_trans, const arma::field<arma::vec>& t_star, const double& nu_1, const double& rho, const double& alpha_3, const double& alpha1l, const double& alpha2l, const double& beta1l, const double& beta2l, const double& var_epsilon1, const double& var_epsilon2, const double& alpha, const double& beta, const double& alpha_0, const double& beta_0, const std::string directory, const arma::mat& Z_est, const arma::vec& A_est, const arma::vec& pi_est, const arma::vec& tau_est, const arma::vec& delta_est, const arma::mat& nu_est, const arma::cube& Phi_est, const arma::cube& gamma_est, const arma::mat& chi_est, const arma::field<arma::vec>& y_star_est, const double& beta_N_t, const int& N_t, const double& sigma_est);
RcppExport SEXP _BayesFOC_BFOC_U_MTT(SEXP y_obsSEXP, SEXP t_obsSEXP, SEXP n_functSEXP, SEXP KSEXP, SEXP PSEXP, SEXP MSEXP, SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP n_temp_transSEXP, SEXP t_starSEXP, SEXP nu_1SEXP, SEXP rhoSEXP, SEXP alpha_3SEXP, SEXP alpha1lSEXP, SEXP alpha2lSEXP, SEXP beta1lSEXP, SEXP beta2lSEXP, SEXP var_epsilon1SEXP, SEXP var_epsilon2SEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP directorySEXP, SEXP Z_estSEXP, SEXP A_estSEXP, SEXP pi_estSEXP, SEXP tau_estSEXP, SEXP delta_estSEXP, SEXP nu_estSEXP, SEXP Phi_estSEXP, SEXP gamma_estSEXP, SEXP chi_estSEXP, SEXP y_star_estSEXP, SEXP beta_N_tSEXP, SEXP N_tSEXP, SEXP sigma_estSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_obs(y_obsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_obs(t_obsSEXP);
    Rcpp::traits::input_parameter< const double& >::type n_funct(n_functSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int& >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int& >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const int& >::type n_temp_trans(n_temp_transSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_star(t_starSEXP);
    Rcpp::traits::input_parameter< const double& >::type nu_1(nu_1SEXP);
    Rcpp::traits::input_parameter< const double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_3(alpha_3SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha1l(alpha1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha2l(alpha2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta1l(beta1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta2l(beta2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon1(var_epsilon1SEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon2(var_epsilon2SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z_est(Z_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type A_est(A_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type pi_est(pi_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type tau_est(tau_estSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type delta_est(delta_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type nu_est(nu_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Phi_est(Phi_estSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type gamma_est(gamma_estSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type chi_est(chi_estSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_star_est(y_star_estSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_N_t(beta_N_tSEXP);
    Rcpp::traits::input_parameter< const int& >::type N_t(N_tSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma_est(sigma_estSEXP);
    rcpp_result_gen = Rcpp::wrap(BFOC_U_MTT(y_obs, t_obs, n_funct, K, P, M, tot_mcmc_iters, r_stored_iters, n_temp_trans, t_star, nu_1, rho, alpha_3, alpha1l, alpha2l, beta1l, beta2l, var_epsilon1, var_epsilon2, alpha, beta, alpha_0, beta_0, directory, Z_est, A_est, pi_est, tau_est, delta_est, nu_est, Phi_est, gamma_est, chi_est, y_star_est, beta_N_t, N_t, sigma_est));
    return rcpp_result_gen;
END_RCPP
}
// PhiChiInitialState
Rcpp::List PhiChiInitialState(const arma::mat& known_Z, const arma::field<arma::vec>& y_obs, const arma::field<arma::vec>& t_obs, const double& n_funct, const int& K, const int& P, const int& M, const int& tot_mcmc_iters, const int& r_stored_iters, const arma::field<arma::vec>& t_star, const double& nu_1, const double& rho, const double& alpha_3, const double& alpha1l, const double& alpha2l, const double& beta1l, const double& beta2l, const double& var_epsilon1, const double& var_epsilon2, const double& alpha, const double& beta, const double& alpha_0, const double& beta_0, const arma::mat& nu, const double& sigma);
RcppExport SEXP _BayesFOC_PhiChiInitialState(SEXP known_ZSEXP, SEXP y_obsSEXP, SEXP t_obsSEXP, SEXP n_functSEXP, SEXP KSEXP, SEXP PSEXP, SEXP MSEXP, SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP t_starSEXP, SEXP nu_1SEXP, SEXP rhoSEXP, SEXP alpha_3SEXP, SEXP alpha1lSEXP, SEXP alpha2lSEXP, SEXP beta1lSEXP, SEXP beta2lSEXP, SEXP var_epsilon1SEXP, SEXP var_epsilon2SEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP nuSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type known_Z(known_ZSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type y_obs(y_obsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_obs(t_obsSEXP);
    Rcpp::traits::input_parameter< const double& >::type n_funct(n_functSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int& >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int& >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::vec>& >::type t_star(t_starSEXP);
    Rcpp::traits::input_parameter< const double& >::type nu_1(nu_1SEXP);
    Rcpp::traits::input_parameter< const double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_3(alpha_3SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha1l(alpha1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha2l(alpha2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta1l(beta1lSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta2l(beta2lSEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon1(var_epsilon1SEXP);
    Rcpp::traits::input_parameter< const double& >::type var_epsilon2(var_epsilon2SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(PhiChiInitialState(known_Z, y_obs, t_obs, n_funct, K, P, M, tot_mcmc_iters, r_stored_iters, t_star, nu_1, rho, alpha_3, alpha1l, alpha2l, beta1l, beta2l, var_epsilon1, var_epsilon2, alpha, beta, alpha_0, beta_0, nu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateZ
Rcpp::List TestUpdateZ();
RcppExport SEXP _BayesFOC_TestUpdateZ() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateZ());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdatePi
Rcpp::List TestUpdatePi();
RcppExport SEXP _BayesFOC_TestUpdatePi() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdatePi());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdatePhi
Rcpp::List TestUpdatePhi();
RcppExport SEXP _BayesFOC_TestUpdatePhi() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdatePhi());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateDelta
Rcpp::List TestUpdateDelta();
RcppExport SEXP _BayesFOC_TestUpdateDelta() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateDelta());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateA
Rcpp::List TestUpdateA();
RcppExport SEXP _BayesFOC_TestUpdateA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateA());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateGamma
Rcpp::List TestUpdateGamma();
RcppExport SEXP _BayesFOC_TestUpdateGamma() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateGamma());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateNu
Rcpp::List TestUpdateNu();
RcppExport SEXP _BayesFOC_TestUpdateNu() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateNu());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateTau
Rcpp::List TestUpdateTau();
RcppExport SEXP _BayesFOC_TestUpdateTau() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateTau());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateSigma
Rcpp::List TestUpdateSigma();
RcppExport SEXP _BayesFOC_TestUpdateSigma() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateSigma());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateChi
Rcpp::List TestUpdateChi();
RcppExport SEXP _BayesFOC_TestUpdateChi() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateChi());
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateYStar
Rcpp::List TestUpdateYStar();
RcppExport SEXP _BayesFOC_TestUpdateYStar() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestUpdateYStar());
    return rcpp_result_gen;
END_RCPP
}
// TestBFOC
Rcpp::List TestBFOC(int tot_mcmc_iters);
RcppExport SEXP _BayesFOC_TestBFOC(SEXP tot_mcmc_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(TestBFOC(tot_mcmc_iters));
    return rcpp_result_gen;
END_RCPP
}
// TestBFOC_SS
Rcpp::List TestBFOC_SS(int tot_mcmc_iters, const std::string directory, const int r_stored_iters);
RcppExport SEXP _BayesFOC_TestBFOC_SS(SEXP tot_mcmc_itersSEXP, SEXP directorySEXP, SEXP r_stored_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    Rcpp::traits::input_parameter< const int >::type r_stored_iters(r_stored_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(TestBFOC_SS(tot_mcmc_iters, directory, r_stored_iters));
    return rcpp_result_gen;
END_RCPP
}
// TestBFOC_SS_nu_Z
Rcpp::List TestBFOC_SS_nu_Z(int tot_mcmc_iters, const std::string directory, const int r_stored_iters);
RcppExport SEXP _BayesFOC_TestBFOC_SS_nu_Z(SEXP tot_mcmc_itersSEXP, SEXP directorySEXP, SEXP r_stored_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    Rcpp::traits::input_parameter< const int >::type r_stored_iters(r_stored_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(TestBFOC_SS_nu_Z(tot_mcmc_iters, directory, r_stored_iters));
    return rcpp_result_gen;
END_RCPP
}
// TestReadMat
arma::mat TestReadMat(std::string directory);
RcppExport SEXP _BayesFOC_TestReadMat(SEXP directorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type directory(directorySEXP);
    rcpp_result_gen = Rcpp::wrap(TestReadMat(directory));
    return rcpp_result_gen;
END_RCPP
}
// TestReadCube
arma::cube TestReadCube(std::string directory);
RcppExport SEXP _BayesFOC_TestReadCube(SEXP directorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type directory(directorySEXP);
    rcpp_result_gen = Rcpp::wrap(TestReadCube(directory));
    return rcpp_result_gen;
END_RCPP
}
// TestReadField
arma::field<arma::cube> TestReadField(std::string directory);
RcppExport SEXP _BayesFOC_TestReadField(SEXP directorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type directory(directorySEXP);
    rcpp_result_gen = Rcpp::wrap(TestReadField(directory));
    return rcpp_result_gen;
END_RCPP
}
// GetStuff
Rcpp::List GetStuff();
RcppExport SEXP _BayesFOC_GetStuff() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetStuff());
    return rcpp_result_gen;
END_RCPP
}
// TestEstimateInitialZ
Rcpp::List TestEstimateInitialZ();
RcppExport SEXP _BayesFOC_TestEstimateInitialZ() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestEstimateInitialZ());
    return rcpp_result_gen;
END_RCPP
}
// TestEstimateInitial
Rcpp::List TestEstimateInitial(const int tot_mcmc_iters, const int r_stored_iters, const std::string directory);
RcppExport SEXP _BayesFOC_TestEstimateInitial(SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP directorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    rcpp_result_gen = Rcpp::wrap(TestEstimateInitial(tot_mcmc_iters, r_stored_iters, directory));
    return rcpp_result_gen;
END_RCPP
}
// TestEstimateInitialTT
Rcpp::List TestEstimateInitialTT(const int tot_mcmc_iters, const int r_stored_iters, const double beta_N_t, const int N_t, const std::string directory);
RcppExport SEXP _BayesFOC_TestEstimateInitialTT(SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP beta_N_tSEXP, SEXP N_tSEXP, SEXP directorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_N_t(beta_N_tSEXP);
    Rcpp::traits::input_parameter< const int >::type N_t(N_tSEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    rcpp_result_gen = Rcpp::wrap(TestEstimateInitialTT(tot_mcmc_iters, r_stored_iters, beta_N_t, N_t, directory));
    return rcpp_result_gen;
END_RCPP
}
// TestEstimateInitialMTT
Rcpp::List TestEstimateInitialMTT(const int tot_mcmc_iters, const int r_stored_iters, const int n_temp_trans, const double beta_N_t, const int N_t, const std::string directory);
RcppExport SEXP _BayesFOC_TestEstimateInitialMTT(SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP n_temp_transSEXP, SEXP beta_N_tSEXP, SEXP N_tSEXP, SEXP directorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const int >::type n_temp_trans(n_temp_transSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_N_t(beta_N_tSEXP);
    Rcpp::traits::input_parameter< const int >::type N_t(N_tSEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    rcpp_result_gen = Rcpp::wrap(TestEstimateInitialMTT(tot_mcmc_iters, r_stored_iters, n_temp_trans, beta_N_t, N_t, directory));
    return rcpp_result_gen;
END_RCPP
}
// TestEstimateInitialTempladder
Rcpp::List TestEstimateInitialTempladder(const double beta_N_t, const int N_t);
RcppExport SEXP _BayesFOC_TestEstimateInitialTempladder(SEXP beta_N_tSEXP, SEXP N_tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type beta_N_t(beta_N_tSEXP);
    Rcpp::traits::input_parameter< const int >::type N_t(N_tSEXP);
    rcpp_result_gen = Rcpp::wrap(TestEstimateInitialTempladder(beta_N_t, N_t));
    return rcpp_result_gen;
END_RCPP
}
// TestEstimateInitialTemp
Rcpp::List TestEstimateInitialTemp(const int tot_mcmc_iters, const int r_stored_iters, const double temp, const std::string directory);
RcppExport SEXP _BayesFOC_TestEstimateInitialTemp(SEXP tot_mcmc_itersSEXP, SEXP r_stored_itersSEXP, SEXP tempSEXP, SEXP directorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type tot_mcmc_iters(tot_mcmc_itersSEXP);
    Rcpp::traits::input_parameter< const int >::type r_stored_iters(r_stored_itersSEXP);
    Rcpp::traits::input_parameter< const double >::type temp(tempSEXP);
    Rcpp::traits::input_parameter< const std::string >::type directory(directorySEXP);
    rcpp_result_gen = Rcpp::wrap(TestEstimateInitialTemp(tot_mcmc_iters, r_stored_iters, temp, directory));
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateZTempered
Rcpp::List TestUpdateZTempered(const double beta);
RcppExport SEXP _BayesFOC_TestUpdateZTempered(SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(TestUpdateZTempered(beta));
    return rcpp_result_gen;
END_RCPP
}
// TestUpdatePhiTempered
Rcpp::List TestUpdatePhiTempered(const double beta);
RcppExport SEXP _BayesFOC_TestUpdatePhiTempered(SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(TestUpdatePhiTempered(beta));
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateNuTempered
Rcpp::List TestUpdateNuTempered(const double beta);
RcppExport SEXP _BayesFOC_TestUpdateNuTempered(SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(TestUpdateNuTempered(beta));
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateSigmaTempered
Rcpp::List TestUpdateSigmaTempered(const double beta);
RcppExport SEXP _BayesFOC_TestUpdateSigmaTempered(SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(TestUpdateSigmaTempered(beta));
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateChiTempered
Rcpp::List TestUpdateChiTempered(const double beta);
RcppExport SEXP _BayesFOC_TestUpdateChiTempered(SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(TestUpdateChiTempered(beta));
    return rcpp_result_gen;
END_RCPP
}
// TestUpdateYStarTempered
Rcpp::List TestUpdateYStarTempered(const double beta);
RcppExport SEXP _BayesFOC_TestUpdateYStarTempered(SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(TestUpdateYStarTempered(beta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayesFOC_BFOC", (DL_FUNC) &_BayesFOC_BFOC, 21},
    {"_BayesFOC_BFOC_SS", (DL_FUNC) &_BayesFOC_BFOC_SS, 24},
    {"_BayesFOC_BFOC_U", (DL_FUNC) &_BayesFOC_BFOC_U, 34},
    {"_BayesFOC_BFOC_U_TT", (DL_FUNC) &_BayesFOC_BFOC_U_TT, 36},
    {"_BayesFOC_BFOC_U_Temp", (DL_FUNC) &_BayesFOC_BFOC_U_Temp, 35},
    {"_BayesFOC_BFOC_U_Templadder", (DL_FUNC) &_BayesFOC_BFOC_U_Templadder, 35},
    {"_BayesFOC_BFOC_U_MTT", (DL_FUNC) &_BayesFOC_BFOC_U_MTT, 37},
    {"_BayesFOC_PhiChiInitialState", (DL_FUNC) &_BayesFOC_PhiChiInitialState, 25},
    {"_BayesFOC_TestUpdateZ", (DL_FUNC) &_BayesFOC_TestUpdateZ, 0},
    {"_BayesFOC_TestUpdatePi", (DL_FUNC) &_BayesFOC_TestUpdatePi, 0},
    {"_BayesFOC_TestUpdatePhi", (DL_FUNC) &_BayesFOC_TestUpdatePhi, 0},
    {"_BayesFOC_TestUpdateDelta", (DL_FUNC) &_BayesFOC_TestUpdateDelta, 0},
    {"_BayesFOC_TestUpdateA", (DL_FUNC) &_BayesFOC_TestUpdateA, 0},
    {"_BayesFOC_TestUpdateGamma", (DL_FUNC) &_BayesFOC_TestUpdateGamma, 0},
    {"_BayesFOC_TestUpdateNu", (DL_FUNC) &_BayesFOC_TestUpdateNu, 0},
    {"_BayesFOC_TestUpdateTau", (DL_FUNC) &_BayesFOC_TestUpdateTau, 0},
    {"_BayesFOC_TestUpdateSigma", (DL_FUNC) &_BayesFOC_TestUpdateSigma, 0},
    {"_BayesFOC_TestUpdateChi", (DL_FUNC) &_BayesFOC_TestUpdateChi, 0},
    {"_BayesFOC_TestUpdateYStar", (DL_FUNC) &_BayesFOC_TestUpdateYStar, 0},
    {"_BayesFOC_TestBFOC", (DL_FUNC) &_BayesFOC_TestBFOC, 1},
    {"_BayesFOC_TestBFOC_SS", (DL_FUNC) &_BayesFOC_TestBFOC_SS, 3},
    {"_BayesFOC_TestBFOC_SS_nu_Z", (DL_FUNC) &_BayesFOC_TestBFOC_SS_nu_Z, 3},
    {"_BayesFOC_TestReadMat", (DL_FUNC) &_BayesFOC_TestReadMat, 1},
    {"_BayesFOC_TestReadCube", (DL_FUNC) &_BayesFOC_TestReadCube, 1},
    {"_BayesFOC_TestReadField", (DL_FUNC) &_BayesFOC_TestReadField, 1},
    {"_BayesFOC_GetStuff", (DL_FUNC) &_BayesFOC_GetStuff, 0},
    {"_BayesFOC_TestEstimateInitialZ", (DL_FUNC) &_BayesFOC_TestEstimateInitialZ, 0},
    {"_BayesFOC_TestEstimateInitial", (DL_FUNC) &_BayesFOC_TestEstimateInitial, 3},
    {"_BayesFOC_TestEstimateInitialTT", (DL_FUNC) &_BayesFOC_TestEstimateInitialTT, 5},
    {"_BayesFOC_TestEstimateInitialMTT", (DL_FUNC) &_BayesFOC_TestEstimateInitialMTT, 6},
    {"_BayesFOC_TestEstimateInitialTempladder", (DL_FUNC) &_BayesFOC_TestEstimateInitialTempladder, 2},
    {"_BayesFOC_TestEstimateInitialTemp", (DL_FUNC) &_BayesFOC_TestEstimateInitialTemp, 4},
    {"_BayesFOC_TestUpdateZTempered", (DL_FUNC) &_BayesFOC_TestUpdateZTempered, 1},
    {"_BayesFOC_TestUpdatePhiTempered", (DL_FUNC) &_BayesFOC_TestUpdatePhiTempered, 1},
    {"_BayesFOC_TestUpdateNuTempered", (DL_FUNC) &_BayesFOC_TestUpdateNuTempered, 1},
    {"_BayesFOC_TestUpdateSigmaTempered", (DL_FUNC) &_BayesFOC_TestUpdateSigmaTempered, 1},
    {"_BayesFOC_TestUpdateChiTempered", (DL_FUNC) &_BayesFOC_TestUpdateChiTempered, 1},
    {"_BayesFOC_TestUpdateYStarTempered", (DL_FUNC) &_BayesFOC_TestUpdateYStarTempered, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayesFOC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
